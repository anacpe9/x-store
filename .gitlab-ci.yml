image: alpine:3.14

variables:
  DOCKER_DRIVER: overlay2
  # DOCKER_HOST: tcp://localhost:2375

stages:
  - DockerRelease

Docker:Build and Release:
  stage: DockerRelease
  image: docker:latest
  only:
    - /^\d+\.\d+\.\d+(-[0-9a-z\-]+)$/
  services:
    - docker:dind
  cache: {}
  variables:
    IMAGE_NAME: "node"
    AKS_CLUSTER: "rh-cluster"
    RESOURCE_GROUP: "rh-k8s-group"
  script:
    - docker info
    - sed "s/%%BASE_IMAGE%%:%%BASE_IMAGE_VERSION%%/${BASE_IMAGE//\//\\/}:$BASE_IMAGE_VERSION/g" Dockerfile.template > Dockerfile
    - echo "$CI_BUILD_TOKEN" | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    - >-
      docker build
      -t $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME
      -f Dockerfile
      .
    - docker images
    - docker push $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME

Docker:Production Release:
  stage: DockerRelease
  image: docker:git
  only:
    - release-1.0
  services:
    - docker:dind
  cache: {}
  variables:
    IMAGE_NAME: "node"
    AKS_CLUSTER: "rh-cluster"
    RESOURCE_GROUP: "rh-k8s-group"
  script:
    - docker info
    - TAG_VERSION=$(git describe --tags --abbrev=0)
    - rm ./src/config/setting.test.yaml
    - rm ./src/config/setting.development.yaml
    - sed -i "s/%%PG_HOST%%/$PG_HOST/g"         ./src/config/setting.production.yaml
    - sed -i "s/%%PG_PORT%%/$PG_PORT/g"         ./src/config/setting.production.yaml
    - sed -i "s/%%PG_DATABASE%%/$PG_DATABASE/g" ./src/config/setting.production.yaml
    - sed -i "s/%%PG_SCHEMA%%/$PG_SCHEMA/g"     ./src/config/setting.production.yaml
    - sed -i "s/%%PG_PASSWORD%%/$PG_PASSWORD/g" ./src/config/setting.production.yaml
    - sed -i "s/%%PG_USERNAME%%/$PG_USERNAME/g" ./src/config/setting.production.yaml
    - sed -i "s/%%BASIC_USERNAME%%/$BASIC_USERNAME/g" ./src/config/setting.production.yaml
    - sed -i "s/%%BASIC_PASSWORD%%/$BASIC_PASSWORD/g" ./src/config/setting.production.yaml
    # - sed "s/%%BASE_IMAGE%%:%%BASE_IMAGE_VERSION%%/${BASE_IMAGE//\//\\/}:$BASE_IMAGE_VERSION/g" Dockerfile.template > Dockerfile
    - echo "$CI_BUILD_TOKEN" | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    - >-
      docker build
      -t $CI_REGISTRY_IMAGE:$TAG_VERSION
      -f Dockerfile
      .
    - docker images
    - docker push $CI_REGISTRY_IMAGE:$TAG_VERSION
